plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.7'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // spring-security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // redis
    implementation 'org.springframework.session:spring-session-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // rabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // serialize
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // gson
    implementation 'com.google.code.gson:gson:2.10.1'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    developmentOnly("org.springframework.boot:spring-boot-docker-compose")

    implementation 'org.springframework.boot:spring-boot-starter-amqp'


    // spring retry
    implementation 'org.springframework.retry:spring-retry'
}

tasks.named('test') {
    useJUnitPlatform()
}
